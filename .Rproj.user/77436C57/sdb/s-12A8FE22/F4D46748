{
    "contents" : "---\ntitle: \"peerAssesment1\"\nauthor: \"Micah Norman\"\ndate: \"May 17, 2015\"\noutput: html_document\n---\n```{r, EnvironmentPrep, echo=TRUE}\n#install.packages('dplyr')\n#install.packages('gplot2')\n#install.packages('reshape2')\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(reshape2)\n\n```\n```{r, supportFunctions}\ngetData <- function(){\n    activity<-read.csv(file = 'activity.csv', stringsAsFactors=FALSE)\n    activity$date<-as.Date(strptime(activity$date, format='%Y-%m-%d'))\n    activity\n}\nactivity <- getData()\n```\n\n\n## Summarazation  \n\n\n```{r, summaryData, echo=TRUE}\nactivitySum <- sum(na.omit(activity$steps))\ntotalSteps      <-activity %>% summarise('TotalSteps' = sum(na.omit(steps)))\n\nsummaryStepsPerDay<-activity %>% group_by(date) %>% summarise('medianStepsPerDay' = median(na.omit(steps)), 'meanStepsPerDay' = mean(na.omit(steps)), 'TotalStepsPerDay' = sum(na.omit(steps)), 'minStepsPerDay' = min(steps, na.rm=TRUE) , 'maxStepsPerDay' = max(steps, na.rm=TRUE) )\nsummaryStepsPerDay$dt <- ts(summaryStepsPerDay$date)\n\n\nsummaryStepsPerInterval<-activity %>% group_by(interval) %>% summarise('medianStepsPerInterval' = median(na.omit(steps)), 'meanStepsPerInterval' = mean(na.omit(steps)), 'TotalStepsPerInterval' = sum(na.omit(steps)), 'minStepsPerInterval' = min(steps, na.rm=TRUE) , 'maxStepsPerInterval' = max(steps, na.rm=TRUE) )\n# summaryStepsPerInterval$dt <- ts(summaryStepsPerInterval$date)\n\nstartDate   <- min(activity$date)\nendDate     <- max(activity$date)\nmeanDate    <- mean(activity$date)\n\nsmd<-melt(summaryStepsPerDay[complete.cases(summaryStepsPerDay),], id.vars = 'dt')\nsmi<-melt(summaryStepsPerInterval[complete.cases(summaryStepsPerInterval),], id.vars = 'interval')\n```\n\n\n\n\n### What is mean total number of steps taken per day?\n\nFor this part of the assignment, you can ignore the missing values in\nthe dataset.\n\n1. Make a histogram of the total number of steps taken each day\n\n```{r}\nhist(summaryStepsPerDay$TotalStepsPerDay)\n```\n\nThe total steps for all measurements between `r startDate` and `r endDate` was `r totalSteps`.  \n\n\n\n\n2. Calculate and report the **mean** and **median** total number of steps taken per day\n```{r}\nmeanStepsPerDay<-round(mean(summaryStepsPerDay$TotalStepsPerDay))\nmedianStepsPerDay<-round(median(summaryStepsPerDay$TotalStepsPerDay))\n```\nThe mean steps per day are: `r meanStepsPerDay` while the median steps per day are `r medianStepsPerDay`.\n\n### What is the average daily activity pattern?\n\n1. Make a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n```{r perIntSum, echo=TRUE}\ntitle<-'Steps Per Interval'\nsmi %>% filter(variable=='meanStepsPerInterval' | variable == 'meanStepsPerInterval')%>%\n    ggplot()+aes(x=interval, y=value, colour=variable)+geom_line() + ggtitle(paste('Summary', title))\n\n```\n\n2. Which 5-minute interval, on average across all the days in the dataset, contains the maximum number of steps?\n\n````{r, echo=TRUE}\nmostActiveInterval<-activity[complete.cases(activity), ] %>% group_by(interval) %>% summarise('m'=sum(steps))\nmInterval<-mostActiveInterval[which.max(mostActiveInterval$m),][,1]\n```\n\nThe interval **`r mInterval`** is the most active interval accross all data in the dataset.\n\n### Imputing missing values\n\nNote that there are a number of days/intervals where there are missing\nvalues (coded as `NA`). The presence of missing days may introduce\nbias into some calculations or summaries of the data.\n\n1. Calculate and report the total number of missing values in the dataset (i.e. the total number of rows with `NA`s)\n\n```{r naData}\ntotalIncompleteRecords<-abs(sum(complete.cases(activity)) - nrow(activity))\nnaAccrossCat<-sapply(names(activity), function(x) sum(is.na(activity[,x])))\n```\n\nThere are `r totalIncompleteRecords` records with missing Data.  Of these, the following table lists the number of NA's per column. \n\n`r naAccrossCat`\n\n2. Devise a strategy for filling in all of the missing values in the dataset. The strategy does not need to be sophisticated. For example, you could use the mean/median for that day, or the mean for that 5-minute interval, etc.\n\n3. Create a new dataset that is equal to the original dataset but with the missing data filled in.\n\n4. Make a histogram of the total number of steps taken each day and Calculate and report the **mean** and **median** total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?\n\n\n### Are there differences in activity patterns between weekdays and weekends?\n\nFor this part the `weekdays()` function may be of some help here. Use\nthe dataset with the filled-in missing values for this part.\n\n1. Create a new factor variable in the dataset with two levels -- \"weekday\" and \"weekend\" indicating whether a given date is a weekday or weekend day.\n\n1. Make a panel plot containing a time series plot (i.e. `type = \"l\"`) of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis). The plot should look something like the following, which was created using **simulated data**:\n\n\n##### Summarizations\n\n\nScaled by Log\n```{r catFigs, echo=TRUE}\ntitle<-'Steps Per Interval'\n\nggplot(data=smi)+aes(x=interval, y=log(value), colour=variable)+geom_line() + ggtitle(paste('Summary', title))\n\n```\n\n\n\n##### Per Day\n```{r perDaySum, echo=TRUE}\ntitle<-'Steps Per Day'\n\nggplot(data=activity)+aes(x=date)+geom_histogram(aes(y=factor(steps)), stat='identity') + ggtitle(paste('Histogram', title))\n\nggplot(data=smd)+aes(x=dt, y=log(value), colour=variable)+geom_line() + ggtitle(paste('Summary', title))\n\n```\n\n\n\n\n\n\n\n\n\n",
    "created" : 1431903851507.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1503836266",
    "id" : "F4D46748",
    "lastKnownWriteTime" : 1431904995,
    "path" : "/repos/homework/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}